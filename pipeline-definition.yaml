AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS CloudFormation Sample Template Continuous Delivery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks. Submit a CloudFormation source artifact
  to an Amazon S3 location before building the pipeline. The pipeline uses the
  artifact to automatically create stacks and change sets.

Parameters:
  PipelineName:
    Description: A name for the pipeline
    Type: String
    Default: aacorne-pipeline-varreplacer
  GitHubUser:
    Description: Github user used to access Github repo
    Type: String
    Default: gifkoek
  GitHubRepository:
    Description: Github source repo
    Type: String
    Default: variable-replacer
  GitHubBranch:
    Description: Branch to monitor for changes, normally master
    Type: String
    Default: feature-variable-replacer
  GitHubOAuthToken:
    Description: Github authentication token
    Type: String
    NoEcho: true

  TemplateFileName:
    Default: samTemplate.yaml
    Description: Source template to deploy
    Type: String
  ProdStackName:
    Default: aacorne-variable-replacer-lambda
    Description: A name for the production stack
    Type: String
  ProdStackConfig:
    Default: simpleSG.json
    Description: The configuration file for the production stack
    Type: String
  ChangeSetName:
    Default: ChangeSetVariableReplacerLambda
    Description: A name for the production stack change set
    Type: String
  NotificationEmail:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
    Default: corne.vandyk@jumo.world

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName
          - GitHubUser
          - GitHubRepository
          - GitHubBranch
          - GitHubOAuthToken
          - NotificationEmail
      - Label:
          default: "Production Stack Settings"
        Parameters:
          - TemplateFileName
          - ChangeSetName
          - ProdStackName
          - ProdStackConfig

Resources:
#
# CodeBuild definition
#
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: variable-replacer
      Description: Builds the "variable-replacer" Lambda
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:2.7.12
      Source:
        Type: CODEPIPELINE
        #BuildSpec: ci/buildspec_ignore.yml
        BuildSpec:
          # note to self - !Join doesn't seem to like '' - for some reason it ignores the delimiter so use ""
          # i'm observing the YAML indentation requirements manually below, not sure if this is necessary or not
          !Join ["\n", [
              "version: 0.1",
              "phases:",
              "  install:",
              "    commands:",
              "      - pip install jinja2 markupsafe -t src/",
              !Join ["", [
                  "      - aws cloudformation package",
                  !Join ["", [" --template-file ", !Ref TemplateFileName]],
                  !Join ["", [" --s3-bucket ", !Ref ArtifactStoreBucket]],
                  !Join ["", [" --output-template-file Output", !Ref TemplateFileName]]
                ]
              ],
              "artifacts:",
              "  type: zip",
              "  files:",
              !Join ["", [
                  "    - Output",
                  !Ref TemplateFileName
                ]
              ]
            ]
          ]
      TimeoutInMinutes: 10
      Tags:
        - Key: Key1
          Value: Value1
        - Key: Key2
          Value: Value2

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - "logs:*"
                Effect: Allow
                Resource: "*"
              - Action:
                - "s3:PutObject"
                - "s3:GetObject"
                - "s3:GetObjectVersion"
                Effect: Allow
                Resource: !Join ["/", [!GetAtt ArtifactStoreBucket.Arn, "*"]]

 #
 # CodePipeline definition
 #
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref NotificationEmail
          Protocol: email

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref PipelineName
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -  Name: TemplateSource
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
        - Name: Build
          Actions:
            - Name: LambdaBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: TemplateSource
              OutputArtifacts:
                - Name: TemplateBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
        - Name: DeployStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: TemplateBuild
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref ProdStackName
                ChangeSetName: !Ref ChangeSetName
                Capabilities: CAPABILITY_IAM
                #TemplateConfiguration: !Sub "TemplateSource::${ProdStackConfig}"
                TemplatePath: !Sub TemplateBuild::Output${TemplateFileName}
              RunOrder: 1
#            - Name: ApproveChangeSet
#              ActionTypeId:
#                Category: Approval
#                Owner: AWS
#                Provider: Manual
#                Version: 1
#              Configuration:
#                NotificationArn: !Ref CodePipelineSNSTopic
#                CustomData: !Sub "A new change set was created for the ${ProdStackName} stack. Do you want to implement the changes?"
#              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref ProdStackName
                Capabilities: CAPABILITY_IAM
              RunOrder: 3
  # CloudFormation role to create and execute the change set
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - "ssm:GetParameters"
                - "cloudformation:CreateStack"
                - "cloudformation:DescribeStacks"
                - "cloudformation:DeleteStack"
                - "cloudformation:UpdateStack"
                - "cloudformation:CreateChangeSet"
                - "cloudformation:ExecuteChangeSet"
                - "cloudformation:DeleteChangeSet"
                - "cloudformation:DescribeChangeSet"
                - "cloudformation:SetStackPolicy"
                - "iam:*"
                - "lambda:*"
                - "codedeploy:*"
                Effect: Allow
                Resource: "*"
              - Action:
                - "s3:GetObject"
                - "s3:GetObjectVersion"
                Effect: Allow
                Resource:
                 - !Join ["/", [!GetAtt ArtifactStoreBucket.Arn, "*"]]

  # Pipeline role
  PipelineRole:
    Type: AWS::IAM::Role
    DependsOn: CodeBuildProject
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - "cloudformation:CreateStack"
                - "cloudformation:DescribeStacks"
                - "cloudformation:DeleteStack"
                - "cloudformation:UpdateStack"
                - "cloudformation:CreateChangeSet"
                - "cloudformation:ExecuteChangeSet"
                - "cloudformation:DeleteChangeSet"
                - "cloudformation:DescribeChangeSet"
                - "cloudformation:SetStackPolicy"
                - "iam:PassRole"
                - "sns:Publish"
                Effect: Allow
                Resource: "*"
              - Action:
                - "s3:PutObject"
                - "s3:GetObject"
                - "s3:GetObjectVersion"
                Effect: Allow
                Resource:
                 - !Join ["/", [!GetAtt ArtifactStoreBucket.Arn, "*"]]
              - Action:
                - "codebuild:StartBuild"
                - "codebuild:BatchGetBuilds"
                Effect: Allow
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/${CodeBuildProject}:*
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/${CodeBuildProject}:*